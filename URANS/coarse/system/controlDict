/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     pisoFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         2;

deltaT          0.001;

writeControl    timeStep;

writeInterval   50;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

functions
{
    forceCoeffs
    {
        type            forceCoeffs;
        functionObjectLibs ("libforces.so");
        writeControl    timeStep;
        writeInterval   1;

        patches         (circle); // Name of the patch for the cylinder

        pName           p;  // Pressure field
        UName           U;  // Velocity field
        rhoName         none; // For incompressible flow, set this to "none"

        log             true; // Output log to standard output

        rho             rhoInf;  // Fluid density, set according to your case (e.g., 1.0 for water)
        rhoInf          1.0;  // Reference density, typically same as rho for incompressible flow

        CofR            (0 0 0); // Center of rotation, usually (0 0 0)

        liftDir         (0 1 0); // Direction of the lift force, adjust accordingly
        dragDir         (1 0 0); // Direction of the drag force, adjust accordingly
        pitchAxis       (0 0 1); // Pitch axis, adjust accordingly

        magUInf         1.0; // Free stream velocity, set according to your case (e.g., 1.0 for 1 m/s)
        lRef            1.0; // Reference length, typically the diameter of the cylinder (e.g., 1.0 for 1 meter)
        Aref            1.0; // Reference area, typically lRef * length of the cylinder (e.g., 1.0 for 1 square meter)
    }
}

// functions
// {
//     momErr
//     {
//         type        momentumError;
//         libs        (fieldFunctionObjects);
//         executeControl  writeTime;
//         writeControl    writeTime;
//     }

//     contErr
//     {
//         type        div;
//         libs        (fieldFunctionObjects);
//         field       phi;
//         executeControl  writeTime;
//         writeControl    writeTime;
//     }

// }


// ************************************************************************* //
